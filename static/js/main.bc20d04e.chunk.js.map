{"version":3,"sources":["components/Header.js","components/CustomRange.js","components/Sidebar.js","components/Location.js","components/LocationList.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","searchQuery","updateFilterSearch","className","name","value","onChange","placeholder","CustomRange","this","min","max","minLimit","maxLimit","step","updateFilter","prefix","values","renderTrack","children","style","height","width","backgroundColor","borderRadius","background","getTrackBackground","colors","renderThumb","index","color","textAlign","fontSize","paddingTop","React","Component","Sidebar","applyFilter","seatsMin","seatsMax","seatsMaxLimit","areaMin","areaMax","areaMaxLimit","priceMin","priceMax","priceMaxLimit","onClick","Location","title","description","seats","area","price","image","toggleFavourite","favourites","href","backgroundImage","includes","LocationList","filteredLocations","filter","location","toLowerCase","trim","length","map","key","sqm","price_per_month","profile_image","require","App","state","allLocations","e","setState","target","propName","preventDefault","fav","ApiResponse","Math","p","seatsMinLimit","areaMinLimit","priceMinLimit","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc20d04e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\nimport { FaSearch } from \"react-icons/fa\";\n\nexport const Header = props => {\n  const { searchQuery, updateFilterSearch } = props;\n\n  return (\n    <header className=\"Header\">\n      <div className=\"site-title\">\n        <h1>Property Listing</h1>\n      </div>\n      <div className=\"search\">\n        <input\n          name=\"searchQuery\"\n          value={searchQuery}\n          onChange={updateFilterSearch}\n          placeholder={`Search by location name...`}\n        />\n        <div className=\"icon\">\n          <FaSearch />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Range, getTrackBackground } from \"react-range\";\n\nclass CustomRange extends React.Component {\n  render() {\n    const { min, max, minLimit, maxLimit, step, updateFilter, prefix } = this.props;\n\n    return (\n      <div className=\"range-container\">\n        <Range\n          step={step}\n          min={minLimit}\n          max={maxLimit}\n          values={[min, max]}\n          onChange={values => updateFilter(values)}\n          renderTrack={({ props, children }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: \"4px\",\n                width: \"100%\",\n                backgroundColor: \"#fff\",\n                borderRadius: \"4px\",\n                background: getTrackBackground({\n                  values: [min, max],\n                  colors: [\"#fff\", \"#F26101\", \"#fff\"],\n                  min: 0,\n                  max: maxLimit\n                })\n              }}\n            >\n              {children}\n            </div>\n          )}\n          renderThumb={({ index, props }) => (\n            <div\n              {...props}\n              style={{\n                ...props.style,\n                height: \"20px\",\n                width: \"42px\",\n                backgroundColor: \"#F26101\",\n                color: \"#fff\",\n                borderRadius: \"4px\",\n                textAlign: \"center\",\n                fontSize: \"12px\",\n                // marginTop: \"32px\",\n                paddingTop: \"2px\"\n              }}\n            >\n              <span>\n                {prefix && prefix}\n                {index === 0 ? min : max}\n              </span>\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CustomRange;\n","import React from \"react\";\nimport \"./Sidebar.scss\";\nimport CustomRange from \"./CustomRange\";\n\nclass Sidebar extends React.Component {\n  render() {\n    const {\n      updateFilter,\n      applyFilter,\n      seatsMin,\n      seatsMax,\n      // seatsMinLimit,\n      seatsMaxLimit,\n      areaMin,\n      areaMax,\n      // areaMinLimit,\n      areaMaxLimit,\n      priceMin,\n      priceMax,\n      // priceMinLimit,\n      priceMaxLimit\n    } = this.props;\n\n    const updateFilterPrice = values => {\n      updateFilter(\"price\", values);\n    };\n\n    const updateFilterSeats = values => {\n      updateFilter(\"seats\", values);\n    };\n\n    const updateFilterArea = values => {\n      updateFilter(\"area\", values);\n    };\n\n    return (\n      <div className=\"Sidebar\">\n        <div className=\"refine-your-search\">\n          <span>Refine your search</span>\n        </div>\n\n        <div className=\"filter-label\">\n          <span>Price Per Month</span>\n        </div>\n        {priceMin > -1 && (\n          <CustomRange\n            min={priceMin}\n            max={priceMax}\n            minLimit={0}\n            maxLimit={priceMaxLimit}\n            step={10}\n            updateFilter={updateFilterPrice}\n            prefix={\"$\"}\n          />\n        )}\n\n        <div className=\"filter-label\">\n          <span>Seats</span>\n        </div>\n        {seatsMin > -1 && (\n          <CustomRange\n            min={seatsMin}\n            max={seatsMax}\n            minLimit={0}\n            maxLimit={seatsMaxLimit}\n            step={1}\n            updateFilter={updateFilterSeats}\n          />\n        )}\n\n        <div className=\"filter-label\">\n          <span>\n            Floor Area (m<sup>2</sup>)\n          </span>\n        </div>\n        {areaMin > -1 && (\n          <CustomRange\n            min={areaMin}\n            max={areaMax}\n            minLimit={0}\n            maxLimit={areaMaxLimit}\n            step={10}\n            updateFilter={updateFilterArea}\n          />\n        )}\n\n        <br />\n        <button onClick={applyFilter}>Update Results</button>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Location.scss\";\nimport { FaChair, FaLayerGroup, FaRegHeart, FaHeart } from \"react-icons/fa\";\n\nexport const Location = props => {\n  const { title, description, seats, area, price, image, toggleFavourite, favourites } = props;\n\n  return (\n    <div className=\"Location\">\n      <a href=\"#/\" className=\"inner\" style={{ backgroundImage: `url(${image})` }}>\n        <div className=\"favourite\">\n          {favourites.includes(title) ? (\n            <FaHeart onClick={() => toggleFavourite(title)} />\n          ) : (\n            <FaRegHeart onClick={() => toggleFavourite(title)} />\n          )}\n        </div>\n        <div className=\"caption\">\n          <span className=\"title\">{title}</span>\n          <div className=\"price\">\n            <span className=\"amount\">${price}</span>\n            <span className=\"per-month\">/month</span>\n          </div>\n          <div>\n            <span className=\"seats\">\n              <FaChair /> {seats}\n            </span>\n            <span className=\"area\">\n              <FaLayerGroup /> {area} m<sup>2</sup>\n            </span>\n          </div>\n          <span className=\"description\">{description}</span>\n        </div>\n      </a>\n    </div>\n  );\n};\n\nexport default Location;\n","import React from \"react\";\nimport \"./LocationList.scss\";\nimport Location from \"./Location\";\nimport { FaHeartBroken } from \"react-icons/fa\";\n\nexport const LocationList = props => {\n  const { searchQuery, filteredLocations, toggleFavourite, favourites } = props;\n\n  return (\n    <div className=\"LocationList\">\n      {filteredLocations.filter(location =>\n        location.title.toLowerCase().includes(searchQuery.toLowerCase().trim())\n      ).length ? (\n        filteredLocations\n          .filter(location =>\n            location.title.toLowerCase().includes(searchQuery.toLowerCase().trim())\n          )\n          .map((location, index) => {\n            return (\n              <Location\n                key={index}\n                title={location.title}\n                description={location.description}\n                seats={location.seats}\n                area={location.sqm}\n                price={location.price_per_month}\n                image={location.profile_image}\n                toggleFavourite={toggleFavourite}\n                favourites={favourites}\n              />\n            );\n          })\n      ) : (\n        <div className=\"no-results\">\n          <span className=\"icon\">\n            <FaHeartBroken />\n          </span>\n          <span>\n            There are no locations to display.\n            <br />\n            Try expanding your search criteria.\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationList;\n","import React from \"react\";\nimport \"./App.scss\";\nimport ApiResponse from \"../api/ApiResponse\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport LocationList from \"./LocationList\";\nrequire(\"@openfonts/dosis_all\");\n\nclass App extends React.Component {\n  state = {\n    allLocations: [],\n    filteredLocations: [],\n    seatsMin: \"\",\n    seatsMax: \"\",\n    areaMin: \"\",\n    areaMax: \"\",\n    priceMin: \"\",\n    priceMax: \"\",\n    searchQuery: \"\",\n    favourites: []\n  };\n\n  componentDidMount() {\n    this.setState(\n      {\n        allLocations: ApiResponse\n      },\n      () => {\n        this.setState({\n          filteredLocations: this.state.allLocations,\n\n          // Seats\n          seatsMin: 0,\n          seatsMax: Math.max(...this.state.allLocations.map(p => p.seats)),\n          seatsMinLimit: 0,\n          seatsMaxLimit: Math.max(...this.state.allLocations.map(p => p.seats)),\n\n          // Area\n          areaMin: 0,\n          areaMax: Math.max(...this.state.allLocations.map(p => p.sqm)),\n          areaMinLimit: 0,\n          areaMaxLimit: Math.max(...this.state.allLocations.map(p => p.sqm)),\n\n          // Price\n          priceMin: 0,\n          priceMax: Math.max(...this.state.allLocations.map(p => p.price_per_month)),\n          priceMinLimit: 0,\n          priceMaxLimit: Math.max(...this.state.allLocations.map(p => p.price_per_month))\n        });\n      }\n    );\n  }\n\n  updateFilterSearch = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  updateFilter = (propName, values) => {\n    const min = `${propName}Min`;\n    const max = `${propName}Max`;\n    this.setState({\n      [min]: values[0],\n      [max]: values[1]\n    });\n  };\n\n  applyFilter = e => {\n    const { allLocations, seatsMin, seatsMax, areaMin, areaMax, priceMin, priceMax } = this.state;\n    e.preventDefault();\n    this.setState({\n      filteredLocations: allLocations.filter(\n        location =>\n          location.seats >= seatsMin &&\n          location.seats <= seatsMax &&\n          location.sqm >= areaMin &&\n          location.sqm <= areaMax &&\n          location.price_per_month >= priceMin &&\n          location.price_per_month <= priceMax\n      )\n    });\n  };\n\n  toggleFavourite = location => {\n    this.state.favourites.includes(location)\n      ? this.setState({ favourites: this.state.favourites.filter(fav => fav !== location) })\n      : this.setState({ favourites: [...this.state.favourites, location] });\n  };\n\n  render() {\n    const {\n      filteredLocations,\n      seatsMin,\n      seatsMax,\n      seatsMinLimit,\n      seatsMaxLimit,\n      areaMin,\n      areaMax,\n      areaMinLimit,\n      areaMaxLimit,\n      priceMin,\n      priceMax,\n      priceMinLimit,\n      priceMaxLimit,\n      searchQuery,\n      favourites\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Header updateFilterSearch={this.updateFilterSearch} searchQuery={searchQuery} />\n        <main>\n          <Sidebar\n            updateFilter={this.updateFilter}\n            applyFilter={this.applyFilter}\n            seatsMin={seatsMin}\n            seatsMax={seatsMax}\n            seatsMinLimit={seatsMinLimit}\n            seatsMaxLimit={seatsMaxLimit}\n            areaMin={areaMin}\n            areaMax={areaMax}\n            areaMinLimit={areaMinLimit}\n            areaMaxLimit={areaMaxLimit}\n            priceMin={priceMin}\n            priceMax={priceMax}\n            priceMinLimit={priceMinLimit}\n            priceMaxLimit={priceMaxLimit}\n          />\n          <LocationList\n            searchQuery={searchQuery}\n            toggleFavourite={this.toggleFavourite}\n            favourites={favourites}\n            filteredLocations={filteredLocations}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}